/*==============================================================================

   行き止まり(派生) [DeadEnd.cpp]
														 Author : 渡邉 修
														 Date   : 2024/01/16
--------------------------------------------------------------------------------

==============================================================================*/
#include "DeadEnd.h"
#include "Collision.h"
#include "GameWorld.h"

//=============================================================================
// コンストラクタ / デストラクタ
//=============================================================================
DeadEnd::DeadEnd(D3DXVECTOR3 pos, D3DXVECTOR3 rot, GameWorld* gameWorld)
	: Object(pos, rot, D3DXVECTOR3(0.0f, 0.0f, 0.0f), gameWorld)
{
	m_Tag = "DeadEnd";
	m_Scl = (D3DXVECTOR3(1.0f, 1.0f, 1.0f));

	//モデルの設定
	MODEL model = { (char*)"data/MODEL/DeadEnd.obj", new BodyParts(m_Pos, m_Rot, m_Scl, this, true) };
	m_ModelMap["Parts"] = model;

	//モデルの読み込み
	Object::ModelLoad();
}

DeadEnd::~DeadEnd()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT DeadEnd::Init()
{


	return E_NOTIMPL;
}

//=============================================================================
// 終了処理
//=============================================================================
void DeadEnd::Uninit()
{

}

//=============================================================================
// 更新処理
//=============================================================================
void DeadEnd::Update()
{
	//モデル更新
	Object::Update();
}
